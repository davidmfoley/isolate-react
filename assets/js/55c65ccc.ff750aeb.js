"use strict";(self.webpackChunkisolate_react_docs=self.webpackChunkisolate_react_docs||[]).push([[746],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6635:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=["components"],s={title:"Closures"},c=void 0,l={unversionedId:"More/Dependencies/closures",id:"More/Dependencies/closures",title:"Closures",description:"Description",source:"@site/docs/More/Dependencies/02-closures.md",sourceDirName:"More/Dependencies",slug:"/More/Dependencies/closures",permalink:"/isolate-react/More/Dependencies/closures",editUrl:"https://github.com/davidmfoley/isolate-react/docusaurus/docs/More/Dependencies/02-closures.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Closures"},sidebar:"tutorialSidebar",previous:{title:"Avoid mocks/stubs by separating side-effects and logic",permalink:"/isolate-react/More/Dependencies/dependency-removal"},next:{title:"Service Locator",permalink:"/isolate-react/More/Dependencies/service-locator"}},p=[{value:"Description",id:"description",children:[],level:2},{value:"Notes",id:"notes",children:[],level:2},{value:"Example",id:"example",children:[],level:2},{value:"Pros",id:"pros",children:[],level:2},{value:"Cons",id:"cons",children:[],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Create a factory function that takes the services needed and returns a function or object that encloses those services."),(0,i.kt)("p",null,"In production code, use the real services to construct the module, by either:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Creating and exporting the constructed production implementation alongside the factory function"),(0,i.kt)("li",{parentName:"ul"},"Calling the factory function in application code to create the production implementation")),(0,i.kt)("p",null,"In tests, configure the dependencies for testing by calling the factory function with test-friendly values."),(0,i.kt)("h2",{id:"notes"},"Notes"),(0,i.kt)("p",null,"This is a general technique that can be used anywhere, not only in react-aware code."),(0,i.kt)("p",null,"This is very similar to using class constructors."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"api.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// production api implementation\nexport const api = {\n  getWidget: (id) => { ... }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"widgets.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { api } from './api'\n\n// factory function\nexport const makeWidgets = (widgetApi) => {\n\n  // return an object that uses the api \n  return {\n    getWidgetName: async (widgetId) => {\n      const widget = await widgetApi.getWidget(widgetId);\n      if (!widget) return \"Unknown Widget\"\n      return widget.name\n    }\n  }\n}\n\n// export the production version, this is imported by other modules\nexport const widgets = makeWidgets(api);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"widgets.test.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { makeWidgets } from './widgets'\n\ndescribe(\"getWidgetName\", () => {\n  test(\"unknown widget returns 'Unknown Widget'\", () => {\n    const fakeApi = {\n      getWidget: async () => undefined\n    }\n\n    // use the factory to make the object we want to test, with a fake api implementation\n    const widgets = makeWidgets(fakeApi)\n\n    const name = await widgets.getWidgetName(42)\n\n    expect(name).toEqual('Unknown Widget')\n  })\n})\n")),(0,i.kt)("h2",{id:"pros"},"Pros"),(0,i.kt)("h2",{id:"cons"},"Cons"))}d.isMDXComponent=!0}}]);