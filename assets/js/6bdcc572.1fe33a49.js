"use strict";(self.webpackChunkisolate_react_docs=self.webpackChunkisolate_react_docs||[]).push([[677],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3718:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],s={title:"Testing useContext"},c=void 0,l={unversionedId:"Testing Components/testing-with-react-context",id:"Testing Components/testing-with-react-context",title:"Testing useContext",description:"Two methods of setting context are provided, and they work the same for isolateComponent and isolateComponentTree:",source:"@site/docs/Testing Components/04-testing-with-react-context.md",sourceDirName:"Testing Components",slug:"/Testing Components/testing-with-react-context",permalink:"/isolate-react/Testing Components/testing-with-react-context",editUrl:"https://github.com/davidmfoley/isolate-react/docusaurus/docs/Testing Components/04-testing-with-react-context.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Testing useContext"},sidebar:"tutorialSidebar",previous:{title:"isolateComponentTree - Test multiple components",permalink:"/isolate-react/Testing Components/isolateComponentTree"},next:{title:"Testing effects",permalink:"/isolate-react/Testing Components/testing-effects"}},p=[{value:"setContext",id:"setcontext",children:[],level:3},{value:"withContext",id:"withcontext",children:[],level:3}],u={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Two methods of setting context are provided, and they work the same for ",(0,a.kt)("inlineCode",{parentName:"p"},"isolateComponent")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"isolateComponentTree"),":"),(0,a.kt)("h3",{id:"setcontext"},"setContext"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"setContext")," method supports setting a context value for testing."),(0,a.kt)("p",null,"Context is often used to store application level state that is accessed in various places throughout a react application."),(0,a.kt)("p",null,"Here's an example where context is used to store the name of the current user:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"\nconst userContext = React.createContext({firstName: '', lastName: ''})\n\nconst CurrentUserName = () => {\n  const user = useContext(userContext)\n\n  return <span>{user.firstName} {user.lastName}</span>\n}\n\n")),(0,a.kt)("p",null,"We can use ",(0,a.kt)("inlineCode",{parentName:"p"},"setContext")," to test the ",(0,a.kt)("inlineCode",{parentName:"p"},"CurrentUserName")," component. For example, with jest our test might look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"test('renders the name', () => {\n  const nameComponent = isolateComponent(<CurrentUserName />)\n  nameComponent.setContext(userContext, {firstName: 'Arthur', lastName: 'Dent'})\n  expect(nameComponent.findOne('span').text()).toEqual('Arthur Dent')\n})\n")),(0,a.kt)("h3",{id:"withcontext"},"withContext"),(0,a.kt)("p",null,"You can also set the context used for the ",(0,a.kt)("em",{parentName:"p"},"initial")," render using the ",(0,a.kt)("inlineCode",{parentName:"p"},"isolateComponent.withContext")," method. That works a little bit differently, and looks like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"test('renders the name, init', () => {\n  const nameComponent = isolateComponent.withContext({firstName: 'Arthur', lastName: 'Dent'})( <CurrentUserName />)\n  expect(nameComponent.findOne('span').text()).toEqual('Arthur Dent')\n})\n")))}m.isMDXComponent=!0}}]);