"use strict";(self.webpackChunkisolate_components_docs=self.webpackChunkisolate_components_docs||[]).push([[8011],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(n),m=s,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,o=new Array(i);o[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:s,o[1]=a;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3507:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=n(7462),s=n(3366),i=(n(7294),n(3905)),o=["components"],a={title:"Class constructors"},c=void 0,l={unversionedId:"test-driven-react/dependency-inversion/class-constructors",id:"test-driven-react/dependency-inversion/class-constructors",isDocsHomePage:!1,title:"Class constructors",description:"Description",source:"@site/docs/test-driven-react/dependency-inversion/05-class-constructors.md",sourceDirName:"test-driven-react/dependency-inversion",slug:"/test-driven-react/dependency-inversion/class-constructors",permalink:"/isolate-react/docs/test-driven-react/dependency-inversion/class-constructors",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/test-driven-react/dependency-inversion/05-class-constructors.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Class constructors"},sidebar:"tutorialSidebar",previous:{title:"Default arguments",permalink:"/isolate-react/docs/test-driven-react/dependency-inversion/default-arguments"},next:{title:"setters",permalink:"/isolate-react/docs/test-driven-react/dependency-inversion/setters"}},p=[{value:"Description",id:"description",children:[]},{value:"Notes",id:"notes",children:[]},{value:"Example",id:"example",children:[]},{value:"Pros",id:"pros",children:[]},{value:"Cons",id:"cons",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"A class takes the required services in its constructor, and stores them in instance variables."),(0,i.kt)("p",null,"In production, we can either default the values of these variables or expose an instance of the class, constructed with the production services."),(0,i.kt)("p",null,"In tests, pass test implementations into the constructor."),(0,i.kt)("h2",{id:"notes"},"Notes"),(0,i.kt)("p",null,"This requires using classes."),(0,i.kt)("p",null,"This is very similar to using closures."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"api.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// production api implementation\nexport const api = {\n  getWidget: (id) => { ... }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"widgets.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { api } from './api'\n\nexport class Widgets {\n  constructor(api) {\n    this.api = api\n  }\n\n  async getWidgetName(widgetId) {\n    const widget = await this.api.getWidget(widgetId);\n    if (!widget) return \"Unknown Widget\"\n    return widget.name\n  }\n}\n\n// optional -- export a production version for import elsewhere\nexport const widgets = new Widgets(api)\n\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"widgets.test.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { widgets } from './widgets'\n\ndescribe(\"getWidgetName\", () => {\n  test(\"unknown widget returns 'Unknown Widget'\", async () => {\n    const fakeApi = {\n      getWidget: async () => undefined\n    }\n\n    // construct the class with the test implementation\n    const widgets = new Widgets(fakeApi)\n\n    const name = await widgets.getWidgetName(42)\n\n    expect(name).toEqual('Unknown Widget')\n  })\n})\n")),(0,i.kt)("h2",{id:"pros"},"Pros"),(0,i.kt)("h2",{id:"cons"},"Cons"))}d.isMDXComponent=!0}}]);